import { ElementType } from "react";
import { PaletteTokens } from "../colors/palette/types";

export interface SVGProps {
  color?: PaletteTokens;
  size: number;
}

export type SVGList =
  | "flags"
  | "pin"
  | "alert-information"
  | "alert-positive"
  | "alert-warning"
  | "alert-danger"
  | "amazon"
  | "apple"
  | "binance"
  | "binoculars"
  | "bold"
  | "bookmarks"
  | "bulb"
  | "burn"
  | "calendar"
  | "camera"
  | "celo"
  | "chat"
  | "check"
  | "coin-purse"
  | "coins"
  | "copy"
  | "danger"
  | "delete"
  | "discord"
  | "earth"
  | "edit-fill"
  | "edit"
  | "email"
  | "eth"
  | "expand"
  | "external-link"
  | "facebook"
  | "file"
  | "flag"
  | "flame"
  | "flash"
  | "gif"
  | "gift"
  | "globe"
  | "gnosis"
  | "graph-1"
  | "graph-2"
  | "help-wheel"
  | "help"
  | "home"
  | "img"
  | "information"
  | "learn"
  | "linkedin"
  | "loading"
  | "metamask"
  | "mic"
  | "mobile-menu"
  | "monitor"
  | "navigation"
  | "new-chat"
  | "new-message"
  | "nfts"
  | "padlock"
  | "pause"
  | "pig"
  | "planet"
  | "polygon"
  | "progress"
  | "quests"
  | "rating"
  | "refresh"
  | "revolut"
  | "reward"
  | "rocket"
  | "search"
  | "send"
  | "settings"
  | "share-2"
  | "share"
  | "sign-out"
  | "smile"
  | "spotify"
  | "success"
  | "support"
  | "supporters"
  | "supporting"
  | "swap"
  | "talent-protocol"
  | "talent"
  | "telegram"
  | "tool-box"
  | "trophy"
  | "twitter"
  | "typing"
  | "uniswap"
  | "unstoppable"
  | "verified-2"
  | "wallet-2"
  | "wallet"
  | "order-by"
  | "order-by-active"
  | "remove"
  | "logo-light"
  | "question"
  | "arrow"
  | "qr"
  | "check-chat"
  | "mailbox"
  | "flower"
  | "sponsor"
  | "clock"
  | "carret"
  | "user"
  | "eye"
  | "eye-disabled"
  | "multiple-users"
  | "add"
  | "notification"
  | "talent-logo"
  | "behance"
  | "dribbble"
  | "farcaster"
  | "figma"
  | "github"
  | "instagram"
  | "lens"
  | "tiktok"
  | "youtube";

export type IconMapType = Record<SVGList, ElementType>;

export interface Props {
  name: SVGList;
  color?: PaletteTokens;
  size?: number;
}
